@prefix : <http://example.org/ns#> .
@prefix pol: <https://github.com/phochste/policy#> .
@prefix util: <https://github.com/phochste/util#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

# Search for a pol:Rule 
#  pol:body holds the logic of the rule
#  ... pol:when select on what conditions the rule should be executed
#  ... pol:then* describes what should happen when the condition holds
(  _:Rule _:Body 
   _:Param _:WhenBody _:ThenBody
   _:WhenBodyPrime
) log:onNegativeSurface {
    # Select all rules with a body
    _:Rule a pol:Rule , pol:ValidRule ;
        pol:body _:Body .

    # The body should contain a `when` and possible multiple `then`-s.
    _:Body log:includes {
        _:Param pol:when _:WhenBody ;
                pol:then _:ThenBody .
    } .

    # Create the body of a new negative surface implication. The
    # `when` triples will be the head and the `then` triples the body
    # of the implication: HEAD -> BODY
    ( _:WhenBody {
        () log:onNegativeSurface {
            # Write the results on an answer surface
            [] pol:onAnswerSurface _:ThenBody .
        } 
    }) log:conjunction _:WhenBodyPrime .

    # Execute the new negative surface implication rules
    () log:onNegativeSurface {
        _:Param log:onNegativeSurface _:WhenBodyPrime .
    } .
} .

# Extract the answer surfaces 
(_:X _:Answer _:S _:P _:O) log:onQuerySurface {
    _:X pol:onAnswerSurface _:Answer .
} .
