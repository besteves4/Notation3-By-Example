@prefix : <urn:example:> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .

:Let :string "hello world" .

# (_:X _:Y) is like For all X and Y) within the surface
#   log:negativeSurface claims the RDF graph on the surface
#   is false.
#   But, because NOT ( P -> Q) == P AND NOT(Q)
#      we can nest log:negativeSurface to express P -> Q
#   
#   What in N3 was:
#        { ?X a ?Y } => { ?Y a :Test } .
#   is in blogic
# .      (_:X _:Y) log:negativeSurface {
#               _:X a _:Y .
#               () log:negativeSurface  {
#                     _:Y a :Test .
#               } .
#        } .
(_:X _:Y) log:negativeSurface {
    :Let :string _:X .

    _:X string:length _:Y .

    () log:negativeSurface {
       :Let :length _:Y .
    }
} .

# Filter out what to see in the output 
# ( _:P _:O ) is for all P and O in log:querySurface 
# return only the triples matching 
(_:P _:O) log:querySurface {
    :Let _:P  _:O . 
} .