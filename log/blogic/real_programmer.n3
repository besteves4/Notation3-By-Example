@prefix : <urn:example:> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .

# Bob 
:Bob :eats :Quiche.

# Alice doesn't eat Quiche
() log:negativeSurface {
    :Alice :eats :Quiche .
} .

# We want to express an exclusive disjunction
#
#    Quiche <-/-> RealProgammer
#
# only when you don't eat quiche you are a real programmer
#   
#    P <-/-> Q = ~{ ( P AND Q ) OR ( ~P AND ~Q ) }
#              = ~{ ~{ ~(P AND Q) AND ~( ~P AND ~Q ) } }

# NOT
(_:S) log:negativeSurface { 

    #NOT
    () log:negativeSurface {

        # NOT 
        () log:negativeSurface {
            # P
            _:S :eats :Quiche .

            # -- implicit AND 

            # Q
            _:S a :RealProgammer .
        }.

        # -- implicit AND

        # NOT
        () log:negativeSurface {

            # NOT
            () log:negativeSurface {
                # P
                _:S :eats :Quiche .
            } .

            # -- implicit AND

            # NOT
            () log:negativeSurface {

                # Q 
                _:S a :RealProgammer .
            }
        } .

    } .
} .

# P (eat quich) -> Q ( you are a programmer)
#
# P -> Q = ~ ( P AND ~Q )
(_:S) log:negativeSurface {
    # P
    _:S :eats :Quiche .

    # -- implicit AND 

    # NOT
    () log:negativeSurface {
        # Q
        _:S a :Programmer .
    } .
} .

(_:S _:C) log:querySurface {
    _:S a _:C.
}.