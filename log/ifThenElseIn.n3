@prefix : <urn:example:> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .

:myFirstGuess 
    a :Guess ;
    :number 42 .

{
    ?G a :Guess ; 
       :number ?N .

    # If X evaluates to true, then evaluate Y otherwise Z
    #    ( X Y Z ) a 3 tuple of Formulas 
    #    S a Scope or Formula context
    (
       { ?N log:equalTo 42 }
       { ?Answer log:equalTo :Correct }
       { ?Answer log:equalTo :Wrong }
    ) log:ifThenElseIn ?SCOPE .
}
=>
{
    ?G :is ?Answer .
} .

# Or, use the ifThenElse to implement an eval that can check
# boolean built-ins 

:Let :param "Prolog is cool" .

{
    :Let :param ?P .

    # Does not start with
    ( ?P string:startsWith "Perl" ) :eval false .
}
=>
{
    ( ?P string:startsWith "Perl" ) :eval false .
} .

# Implement eval
{
    ( ?S ?P ?O ) :eval ?B .
}
<=
{
    (
       { ?S ?P ?O }
       { ?B log:equalTo true } 
       { ?B log:equalTo false }
    ) log:ifThenElseIn ?SCOPE .
} .

# Test
{
    :myFirstGuess :is :Correct .
    ( "Prolog is cool" string:startsWith "Perl" ) :eval false .
}
=>
{   
    :test :is true .
} .
